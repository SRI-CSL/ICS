dnl 
dnl The MIT License (MIT)
dnl 
dnl Copyright (c) 2020 SRI International
dnl 
dnl Permission is hereby granted, free of charge, to any person obtaining a copy
dnl of this software and associated documentation files (the "Software"), to deal
dnl in the Software without restriction, including without limitation the rights
dnl to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
dnl copies of the Software, and to permit persons to whom the Software is
dnl furnished to do so, subject to the following conditions:
dnl 
dnl The above copyright notice and this permission notice shall be included in all
dnl copies or substantial portions of the Software.
dnl 
dnl THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
dnl IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
dnl FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
dnl AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
dnl LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
dnl OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
dnl SOFTWARE.
dnl 
dnl ICS autoconf input

dnl make sure we are using a recent autoconf version
AC_PREREQ(2.50)

AC_DEFUN([CSL_CHECK_DOT_A_LIB],
[ 	
AC_MSG_NOTICE([Trying to find a usable $1])
if test -z "$2"; then
   search_libs=`ld --verbose | grep SEARCH_DIR | sed -e 's,SEARCH_DIR(\"\?,,g' -e 's,\"\?);,,g'`
	 prev_l_opt=false
	 for ld_arg in $LDFLAGS; do
     if test "$prev_l_opt" = "true"; then
        search_libs="$search_libs $ld_arg"
     else 
        if test "$ld_arg" = "-L"; then
           prev_l_opt=true 
        else
           prefix=`echo $ld_arg | cut -c -2`
           body=`echo $ld_arg | cut -c 3-`
           if test "$prefix" = "-L"; then
             search_libs="$search_libs $body"
           else
             prefix=`echo $ld_arg | cut -c -15`
             body=`echo $ld_arg | cut -c 16-`
             if test "$prefix" = "--library-path"; then
               search_libs="$search_libs $body"
             fi
           fi   
        fi
     fi
   done
else
   search_libs=$2/lib
fi
olibs=$LIBS
ocppflags=$CPPFLAGS
LIBPATH=""
for ldir in $search_libs; do
    AC_MSG_CHECKING([for $1 in $ldir])
		found_all="true"
		for target_lib in $1; do 
				if test ! -f $ldir/$target_lib; then
           found_all="false"
        fi
    done
    if test "$found_all" = "true"; then
       AC_MSG_RESULT(found)
			 currlibs=""
       for target_lib in $1; do
         currlibs="$currlibs $ldir/$target_lib"
       done
       LIBS="$currlibs $olibs"
       tmppath=`dirname $ldir`
       CPPFLAGS="-I$tmppath/include $ocppflags"
       AC_TRY_RUN([#include<string.h>
#include<stdlib.h>
$3
int main() {
  $4
  ;
	return 0;
}], target_lib_ok=yes, target_lib_ok=no, target_lib_ok=no)
       AC_MSG_CHECKING([$1 at $ldir])
       if test $target_lib_ok = yes; then
         AC_MSG_RESULT(yes)
         LIBPATH=`dirname $ldir`
         break
       else
         AC_MSG_RESULT(no)
       fi
    else
       AC_MSG_RESULT([not found])
    fi
done
LIBS=$olibs	
CPPFLAGS=$ocppflags
if test -z $LIBPATH; then
   $5
fi
currlibs=""
for target_lib in $1; do
		currlibs="$currlibs $LIBPATH/lib/$target_lib"
done
LIBS="$currlibs $LIBS"
CPPFLAGS="-I$LIBPATH/include $CPPFLAGS"
])


dnl If it doesn't look like GNU Make is being used, give a friendly warning
tem=`make --version -f /dev/null 2>&1 | grep GNU`
if test "x$tem" = "x"; then
  AC_MSG_WARN([You need to use GNU Make when compiling])
fi

dnl begin
AC_INIT(src/ics.mli)

AC_PREFIX_DEFAULT(/usr)

dnl optionally give path, otherwise use cwd
AC_MSG_CHECKING(icspath)
AC_ARG_WITH(icspath, [  --with-icspath=/path/to/ics ])
if test "x$with_icspath" = "x"; then
  ICSPATH=`pwd`
else
  ICSPATH=$with_icspath
fi
if ! test -f $ICSPATH/ics.in; then
  AC_MSG_ERROR(Invalid ICS path)
fi
AC_MSG_RESULT($ICSPATH)
AC_SUBST(ICSPATH)

AC_ARG_WITH(cxx, [  --with-cxx=g++          Specify a C++ compiler to be used],
if test -n "$withval"; then
	 CXX="$withval"
fi)

dnl Check for programs

AC_PROG_CPP
AC_PROG_CC(gcc)
AC_PROG_CXX(g++)
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_CHECK_PROG(AR, ar, ar) 
# are on AIX needs to know the object file format
case "$target" in
  powerpc64*-*-aix*)
    AR="$AR -X 64"
    ;;
esac   

dnl Check for OCaml programs
AC_CHECK_PROG(OCAMLC,ocamlc,ocamlc,no)
if test "$OCAMLC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlc.)
fi
	
AC_MSG_CHECKING(for $OCAMLC version)
ocamlc_version=`$OCAMLC -v | sed -e 's,[[^0-9.]],,g'`
maj_ocamlc_version=`echo $ocamlc_version | cut -d. -f 1`
min_ocamlc_version=`echo $ocamlc_version | cut -d. -f 2`
if test $maj_ocamlc_version -lt 3 -o \( $maj_ocamlc_version -eq 3 -a $min_ocamlc_version -lt 4 \); then
   AC_MSG_ERROR(Wrong version of $OCAMLC: $ocamlc_version - need at least 3.08)
else
   AC_MSG_RESULT($ocamlc_version)
fi
				
AC_CHECK_PROG(OCAMLOPT,ocamlopt,ocamlopt,no)
if test "$OCAMLOPT" = no ; then
	AC_MSG_ERROR(Cannot find ocamlopt.)
fi
AC_CHECK_PROG(OCAMLMKTOP,ocamlmktop,ocamlmktop,no)
if test "$OCAMLMKTOP" = no ; then
	AC_MSG_ERROR(Cannot find ocamlmktop.)
fi
AC_CHECK_PROG(OCAMLDEP,ocamldep,ocamldep,no)
if test "$OCAMLDEP" = no ; then
	AC_MSG_ERROR(Cannot find ocamldep.)
fi
AC_CHECK_PROG(OCAMLLEX,ocamllex,ocamllex,no)
if test "$OCAMLLEX" = no ; then
	AC_MSG_ERROR(Cannot find ocamllex.)
fi
AC_CHECK_PROG(OCAMLYACC,ocamlyacc,ocamlyacc,no)
if test "$OCAMLYACC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlyacc.)
fi

AC_CHECK_PROG(OCAMLDOC,ocamldoc,ocamldoc,true)
if test "$OCAMLDOC" = true ; then
	AC_MSG_WARN(Cannot find ocamldoc -- but not mandatory, since only used for generating documentation.)
fi

AC_CHECK_PROG(OCAMLMKLIB,ocamlmklib,ocamlmklib,no)
if test "$OCAMLMKLIB" = no ; then
	AC_MSG_ERROR(Cannot find ocamlmklib.)
fi

AC_SUBST(SHELL)
AC_CHECK_PROG(SHELL,[bash --version],bash,no)
if test "$SHELL" = no; then
	 AC_MSG_ERROR([Cannot find the program (shell) `bash'.])
fi

AC_SUBST(SED)
AC_CHECK_PROG(SED,[sed --version],sed,no)
if test "$SED" = no; then
	 AC_MSG_ERROR([Cannot find the program `sed'.])
fi


dnl SET ICS_CYGWIN define when cygwin
if test "$posixos" = "cygwin"; then
  CPPFLAGS="-DICS_CYGWIN $CPPFLAGS"
fi


dnl OCAML requires the libraries specified using -l to be inside -ccopt
olibs=$LIBS
LIBS=""
AC_SUBST(MINUS_L_LIBS)
MINUS_L_LIBS=""
for curr_lib in $olibs; do 
  prefix=`echo $curr_lib | cut -c -2`
  if test "$prefix" = "-l"; then
		MINUS_L_LIBS="$MINUS_L_LIBS $curr_lib"
  else
    LIBS="$LIBS $curr_lib"
  fi
done

dnl UPDATE Flags
if test -n "$CDEBUGFLAG"; then
  CFLAGS="$CDEBUGFLAG"
	CXXFLAGS="$CDEBUGFLAG"
else
	CFLAGS="-O3 -DNDEBUG"
	CXXFLAGS="-O3 -DNDEBUG"
fi				

dnl Turn off warning messages for deprecated C++ features
gxx_major=`$CXX --version | sed -e '2,$d' | sed -e 's/[[^0-9\.]]//g' | sed -e 's/[[\.]][[\.]]*/\./g' | sed -e 's/^\.//g' | sed -e 's/\.$//g' | awk -F . '{print $1}'`
if test $gxx_major -ge 3; then CXXFLAGS="-Wno-deprecated $CXXFLAGS"; fi

dnl Finally create all the generated files
AC_OUTPUT(Makefile ics install.sh BIN-INSTALL)

chmod a+x ics
