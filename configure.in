dnl ICS autoconf input

dnl make sure we are using a recent autoconf version
AC_PREREQ(2.50)

dnl If it doesn't look like GNU Make is being used, give a friendly warning
tem=`make --version -f /dev/null 2>&1 | grep GNU`
if test "x$tem" = "x"; then
  AC_MSG_WARN([You need to use GNU Make when compiling])
fi

dnl begin
AC_INIT(src/ics.mli)

AC_PREFIX_DEFAULT(/usr)

dnl Checking flags
AC_ARG_ENABLE(debug, [  --enable-debug                  turn on debugging [[default=no]]],
if eval "test x$enable_debug = xyes"; then
  CDEBUGFLAG="-g -Wall"
fi)

dnl optionally give path, otherwise use cwd
AC_MSG_CHECKING(icspath)
AC_ARG_WITH(icspath, [ --with-icspath=/path/to/ics ])
AC_ARG_WITH(gmp, [ --with-gmp=/path/to/gmp ])
if test "x$with_icspath" = "x"; then
  ICSPATH=`pwd`
else
  ICSPATH=$with_icspath
fi
if ! test -f $ICSPATH/ics.in; then
  AC_MSG_ERROR(Invalid ICS path)
fi
AC_MSG_RESULT($ICSPATH)
AC_SUBST(ICSPATH)

dnl Check for programs

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_CHECK_PROG(AR, ar, ar) 
# are on AIX needs to know the object file format
case "$target" in
  powerpc64*-*-aix*)
    AR="$AR -X 64"
    ;;
esac   


dnl Check for OCaml programs
AC_CHECK_PROG(OCAMLC,ocamlc,ocamlc,no)
if test "$OCAMLC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlc.)
fi
	
AC_MSG_CHECKING(for $OCAMLC version)
ocamlc_version=`$OCAMLC -v | sed -e 's,[[^0-9.]],,g'`
maj_ocamlc_version=`echo $ocamlc_version | cut -d. -f 1`
min_ocamlc_version=`echo $ocamlc_version | cut -d. -f 2`
if test $maj_ocamlc_version -lt 3 -o \( $maj_ocamlc_version -eq 3 -a $min_ocamlc_version -lt 4 \); then
   AC_MSG_ERROR(Wrong version of $OCAMLC: $ocamlc_version - need at least 3.04)
else
   AC_MSG_RESULT($ocamlc_version)
fi
				
AC_CHECK_PROG(OCAMLOPT,ocamlopt,ocamlopt,no)
if test "$OCAMLOPT" = no ; then
	AC_MSG_ERROR(Cannot find ocamlopt.)
fi
AC_CHECK_PROG(OCAMLMKTOP,ocamlmktop,ocamlmktop,no)
if test "$OCAMLMKTOP" = no ; then
	AC_MSG_ERROR(Cannot find ocamlmktop.)
fi
AC_CHECK_PROG(OCAMLDEP,ocamldep,ocamldep,no)
if test "$OCAMLDEP" = no ; then
	AC_MSG_ERROR(Cannot find ocamldep.)
fi
AC_CHECK_PROG(OCAMLLEX,ocamllex,ocamllex,no)
if test "$OCAMLLEX" = no ; then
	AC_MSG_ERROR(Cannot find ocamllex.)
fi
AC_CHECK_PROG(OCAMLYACC,ocamlyacc,ocamlyacc,no)
if test "$OCAMLYACC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlyacc.)
fi

AC_CHECK_PROG(OCAMLDOC,ocamldoc,ocamldoc,true)
if test "$OCAMLDOC" = true ; then
	AC_MSG_WARN(Cannot find ocamldoc -- but not mandatory, since only used for generating documentation.)
fi


dnl Check for library

dnl The following is meaningless since we want the libgmp.a file, and this
dnl uses the libgmp.so file
dnl AC_CHECK_LIB(gmp,__gmpz_cmp, , AC_MSG_WARN(Potential problem with GMP library.))

AC_MSG_NOTICE(Trying to find a usable libgmp.a)
   
if test -z "$with_gmp"; then
   gmplibs=`ld --verbose | grep SEARCH_DIR | sed -e 's,SEARCH_DIR(\"\?,,g' -e 's,\"\?);,,g'`
else
   gmplibs=$with_gmp/lib
fi
olibs=$LIBS
for ldir in $gmplibs; do
    AC_MSG_CHECKING(for libgmp.a in $ldir)
    if test -f $ldir/libgmp.a; then
       AC_MSG_RESULT(found)
       LIBS=$ldir/libgmp.a
       AC_TRY_RUN([#include<string.h>
#include<stdlib.h>
extern char *__gmp_version;
int main() {
  char *p;
  int maj;
  int min;
  if (! __gmp_version) exit(1);
  p = strdup(__gmp_version);
  maj = atoi(strtok(p, "."));
  min = atoi(strtok(NULL, "."));
  if (maj < 4) exit(1);
  if (maj == 4 && min < 1) exit(1);
  exit(0);
}], libgmp_ok=yes, libgmp_ok=no, libgmp_ok=no)
       AC_MSG_CHECKING($ldir/libgmp.a version >= 4.1)
       if test $libgmp_ok = yes; then
          AC_MSG_RESULT(yes)
          GMPPATH=`dirname $ldir`
          break
       else
          AC_MSG_RESULT(no)
       fi
    else
       AC_MSG_RESULT(not found)
    fi
done
LIBS=$olibs	
if test -z $GMPPATH; then
   AC_MSG_ERROR(Could not find libgmp.a version >= 4.1 in $gmplibs)
fi

dnl UPDATE Flags
if test -n "$CDEBUGFLAG"; then
  CFLAGS="$CDEBUGFLAG"
	CXXFLAGS="$CDEBUGFLAG"
else
	CFLAGS="-O3 -DNDEBUG"
	CXXFLAGS="-O3 -DNDEBUG"
fi				

dnl Finally create all the generated files
AC_SUBST(GMPPATH)
dnl AC_OUTPUT(Makefile chameleon/Makefile ics)
AC_OUTPUT(Makefile chameleon/Makefile ics sat/Makefile sat/src/Makefile)

chmod a+x ics



