can (p | (q & r) | (~p & q & ~r) | (p & ~q & r)).
% => p | q

assert p = (x <= y).
assert q = (z > 0).
assert r = (x + 2*z-y >= 3).
assert x >= 0.
assert y >= 0.
assert z >= 0.
assert x in int.
assert y in int.
assert z in int.

% Don't cares

check ~p & q & ~r.
check p & ~q & r.

check ((x <= y) | (z > 0 & x + 2 * z - y >= 3)) <=> (p | q).
