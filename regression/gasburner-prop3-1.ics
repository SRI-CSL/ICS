def x_10 := 0 .
def x_11 := 0 .
def x_12 := 0 .
prop x_13 := [~ x_0] .
prop x_14 := [x_1 = 0] .
def x_15 := (x_10 + x_2) .
prop x_16 := [x_3 = x_12] .
prop x_17 := [x_4 = x_11] .
prop x_18 := [~ x_5] .
prop a_0 := [x_7 <= 1] .
prop a_1 := [x_7 >= 0] .
prop a_2 := [~ x_0] .
prop a_3 := [~ [x_6 < 0]] .
prop a_4 := [x_7 = icsaux0] .
prop a_5 := [[[[[[[[[x_8 = 0] & x_18] & x_13] & x_9] & x_14] & x_17] & x_16] | [[[[[[[[x_8 = 1] & x_18] & x_0] & [~ [x_10 < 30]]] & [~ x_9]] & x_14] & x_17] & x_16]] | [[[[[[[[x_8 = 2] & x_5] & [~ [x_2 < 0]]] & [x_0 | [x_15 <= 1]]] & [x_1 = x_15]] & [x_4 = (x_11 + x_2)]] & [x_3 = icsaux1]] & [x_9 <=> x_0]]] .
prop a_6 := [[[~ [x_4 < 60]] & [~ [(x_3 * 20) <= x_4]]] | [[~ [x_11 < 60]] & [~ [(x_12 * 20) <= x_11]]]] .
sat 
[if x_5 then [icsaux0 = 0] else [icsaux0 = 1] end] & 
[if x_13 then [icsaux1 = (x_12 + x_2)] else [icsaux1 = x_12] end] & 
~[ [~ [[[[[[a_0 & a_1] & a_2] & a_3] & a_4] & a_5] & a_6]] ].
