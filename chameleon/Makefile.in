
### configuration part

OCAMLC   = @OCAMLC@
OCAMLLINK= @OCAMLMKTOP@
OCAMLOPT = @OCAMLOPT@
OCAMLLEX = @OCAMLLEX@
OCAMLYACC= @OCAMLYACC@
OCAMLDEP = @OCAMLDEP@

BFLAGS =
OFLAGS =

LIBS    = -cclib -lstr

ifeq ($(MAKELEVEL),0)
   ARCH := $(shell ../bin/config.guess)
   export ARCH
endif

### targets

CMO = mli_parser.cmo mli_lexer.cmo chameleon.cmo
CMX = $(CMO:.cmo=.cmx)

.PHONY : all 

all: $(ARCH)
	$(MAKE) -C $(ARCH) -f ../Makefile chameleon

chameleon: $(CMX)
	$(OCAMLOPT) -o $@ str.cmxa $(CMX) $(LIBS)

$(ARCH):
	mkdir $(ARCH)

.PRECIOUS : chameleon.ml mli_lexer.mll mli_parser.mly mli_types.mli

chameleon.ml: ../src/chameleon.ml
	@ln -sf ../src/$(@F) .

mli_lexer.mll: ../src/mli_lexer.mll
	@ln -sf ../src/$(@F) .

mli_parser.mly: ../src/mli_parser.mly
	@ln -sf ../src/$(@F) .

mli_types.mli: ../src/mli_types.mli
	@ln -sf ../src/$(@F) .

GENERATED = mli_parser.ml mli_parser.mli mli_lexer.ml

### Generic rules

.SUFFIXES: .ml .mli .cmi .cmo .cmx .mll .mly .prof

.c.o:
	$(OCAMLC) -c $<

.mli.cmi:
	$(OCAMLC) $(BFLAGS) -c $<

.ml.cmo:
	$(OCAMLC) $(BFLAGS) -c $<

.ml.cmx:
	$(OCAMLOPT) $(OFLAGS) -c $<

.mll.ml:
	$(OCAMLLEX) $<

.mly.ml:
	$(OCAMLYACC) $<
.mly.mli:
	$(OCAMLYACC) $<

.ml.prof:
	ocamlprof $< > $@

### clean and depend

clean::
	rm -rf $(ARCH)

mli_parser.cmi: mli_types.cmi 
chameleon.cmo: mli_lexer.cmo mli_types.cmi 
chameleon.cmx: mli_lexer.cmx mli_types.cmi 
mli_lexer.cmo: mli_parser.cmi 
mli_lexer.cmx: mli_parser.cmx 
mli_parser.cmo: mli_types.cmi mli_parser.cmi 
mli_parser.cmx: mli_types.cmi mli_parser.cmi 

